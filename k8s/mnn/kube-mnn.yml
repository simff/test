---
-
  become: true
  hosts: masters,worknodes
  become_method: sudo
  become_user: root
  tasks:
  - name: Update APT
    apt:
      update_cache: yes

  - name: Install packeges
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - wget
        - git
        - htop
        - net-tools
        - gnupg

  - name: Changes /etc/modules-load.d/modules.conf
    ansible.builtin.lineinfile:
      path: /etc/modules-load.d/modules.conf
      line: br_netfilter \noverlay
      create: yes

  - name: Creating /etc/sysctl.d/kube.conf
    ansible.builtin.lineinfile:
      path: /etc/sysctl.d/kube.conf
      line: net.bridge.bridge-nf-call-iptables = 1
      create: yes

  - name: Install Docker
    apt:
      name:
        - docker
        - docker.io

  - name: Creating /etc/docker/daemon.json
    copy:
      dest: "/etc/docker/daemon.json"
      content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m"
        },
        "storage-driver": "overlay2",
        "storage-opts": [
        "overlay2.override_kernel_check=true"
        ]
        }

  - name: Restart Docker
    service:
      name: "docker"
      state: "restarted"
      enabled: "yes"

# Install-Kubernetes the selected version older than 1.23.17-00
# View the name of the correct version: curl -s https://packages.cloud.google.com/apt/dists/kubernetes-xenial/main/binary-amd64/Packages | grep Version | awk '{print $2}'

#  - name: Install-Kubernetes 1.19.16-00
#    shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list && sudo apt-get update -q && sudo apt-get install -qy kubelet=1.19.16-00 kubectl=1.19.16-00 kubeadm=1.19.16-00

  - name: Install-Kubernetes 1.23.17-00
    shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list && sudo apt-get update -q && sudo apt-get install -qy kubelet=1.23.17-00 kubectl=1.23.17-00 kubeadm=1.23.17-00

# ------------------------------------------------------------------------------
#  - name: Create directory /etc/apt/keyrings
#    ansible.builtin.file:
#      path: /etc/apt/keyrings
#      state: directory
#      mode: '0755'

#  - name: Install-Kubernetes latest version
#    shell: curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

#  - name: Install-Kubernetes latest version
#    shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

#  - name: Update APT
#    apt:
#      update_cache: yes

#  - name: Install-Kubernetes latest version
#    apt:
#      name:
#        - kubelet
#        - kubeadm
#        - kubectl
# ------------------------------------------------------------------------------
  - name: Disabled update kubelet kubeadm kubectl
    shell: apt-mark hold kubelet kubeadm kubectl

  - name: The pause for 1 minutes to build app cache
    pause:
      minutes: 1

-
  become: true
  hosts: master01
  become_method: sudo
  become_user: root
  tasks:
  - name: Init master
    shell: kubeadm init --pod-network-cidr=10.244.0.0/16

  - name: The pause for 1 minutes to build app cache
    pause:
      minutes: 1

  - name: Export KUBECONFIG
    shell: export KUBECONFIG=/etc/kubernetes/admin.conf

  - name: Export KUBECONFIG config
    ansible.builtin.lineinfile:
      path: /etc/environment
      line: export KUBECONFIG=/etc/kubernetes/admin.conf
      create: yes

  - name: Apply flannel
    shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

  - name: The pause for 1 minutes to build app cache
    pause:
      minutes: 1

  - name: get join command
    shell: kubeadm token create --print-join-command
    register: join_command_raw

  - name: set join command
    set_fact:
      join_command: "{{ join_command_raw.stdout_lines[0] }}"

-
  become: true
  hosts: worknodes
  become_method: sudo
  become_user: root
  tasks:
  - name: join cluster
    shell: "{{ hostvars['master01'].join_command }}"  # set primary master
