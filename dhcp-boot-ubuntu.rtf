{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset204 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 nano /etc/apt/apt.conf.d/20auto-upgrades\par
\b0 APT::Periodic::Update-Package-Lists "0";\par
APT::Periodic::Unattended-Upgrade "0";\b\par
echo -ne "n\\n""p\\n""1\\n""\\n""\\n""w\\n" |fdisk /dev/sdb\par
mkfs -t xfs /dev/sdb1\par
mkdir /data\par
blkid /dev/sdb1\par
nano /etc/fstab\par
chmod 0777 /data\par
reboot\par
df -Th\par
---------------------------------------------------------------------------------\fs44\par
netboot-ubuntu-18.04\fs28\par
apt install dnsmasq lftp -y\par
rm /etc/dnsmasq.conf\par
nano /etc/dnsmasq.conf\par
\b0 interface=ens33,lo\par
bind-interfaces\par
domain=test.my\par
dhcp-range=ens33,192.168.1.150,192.168.1.190,255.255.255.0,1h\par
dhcp-option=3,192.168.1.1 # gateway\par
dhcp-option=6,192.168.1.1 # dns server\par
dhcp-option=28,192.168.1.255 # broadcast\par
# dhcp-option=42,0.0.0.0 # NTP\par
dhcp-boot=pxelinux.0,pxeserver,192.168.1.90 # pxe-server\par
enable-tftp\par
tftp-root=/srv/netboot\b\par
cd /srv\par
lftp -c "open {{\field{\*\fldinst{HYPERLINK http://archive.ubuntu.com/ubuntu/dists/bionic/main/installer-i386/current/images/ }}{\fldrslt{http://archive.ubuntu.com/ubuntu/dists/bionic/main/installer-i386/current/images/\ul0\cf0}}}}\f0\fs28 ; mirror netboot/"\par
systemctl restart dnsmasq.service\par
systemctl enable dnsmasq.service\par
systemctl status dnsmasq.service\par
---------------------------------------------------------------------------\par
\fs44 ubuntu-22.04.1-live-server-amd64.iso \fs28\par
apt update\par
apt install dnsmasq apache2 syslinux-common pxelinux -y\par
mv /var/www/html/index.html /root/\par
\lang1033 ln -s\lang9  /data/ubuntu-22.04.1-live-server-amd64.iso /var/www/html/\par
rm /etc/dnsmasq.conf\par
nano /etc/dnsmasq.conf\par
\b0 interface=ens33,lo\par
bind-interfaces\par
domain=test.my\par
dhcp-range=ens33,192.168.1.150,192.168.1.190,255.255.255.0,1h\par
dhcp-option=3,192.168.1.1 # gateway\par
dhcp-option=6,192.168.1.1 # dns server\par
dhcp-option=28,192.168.1.255 # broadcast\par
# dhcp-option=42,0.0.0.0 # NTP\par
# dhcp-host=mac-address,host-name,192.168.1.155,infinite\par
dhcp-boot=pxelinux.0,pxeserver,192.168.1.90 # pxe-server\par
enable-tftp\par
tftp-root=/srv/tftp\b\par
mkdir /srv/tftp\par
systemctl restart dnsmasq.service\par
systemctl enable dnsmasq.service\par
systemctl status dnsmasq.service\par
cp /usr/lib/PXELINUX/pxelinux.0 /srv/tftp/\par
mount /data/ubuntu-22.04.1-live-server-amd64.iso /mnt\par
cp /mnt/casper/\{vmlinuz,initrd\} /srv/tftp/\par
cp /usr/lib/syslinux/modules/bios/ldlinux.c32 /srv/tftp/\par
mkdir /srv/tftp/pxelinux.cfg\par
nano /srv/tftp/pxelinux.cfg/default\par
\b0 DEFAULT install\par
LABEL install\par
  KERNEL vmlinuz\par
  INITRD initrd\par
  APPEND root=/dev/ram0 ramdisk_size=1500000 ip=dhcp url={{\field{\*\fldinst{HYPERLINK http://192.168.1.90/ubuntu-22.04.1-live-server-amd64.iso }}{\fldrslt{http://192.168.1.90/ubuntu-22.04.1-live-server-amd64.iso\ul0\cf0}}}}\f0\fs28\par
\b nano /lib/systemd/system/dnsmasq.service\par
\b0 Type=idle\par
\b cat /var/lib/misc/dnsmasq.leases\b0\par
\b -----------------------------------------------------------------------------------\par
\fs44 Cubic\fs28\par
echo -ne "\\n" |apt-add-repository ppa:cubic-wizard/release\par
sleep 10\par
apt update && sudo apt install cubic -y\par
sudo chmod 0777 /data\par
mkdir /data/pr1\par
passwd\par
apt update\par
apt list --installed\par
apt install openssh-server -y\par
nano /etc/ssh/sshd_config\par
mkdir .ssh\par
nano .ssh/authorized_keys\par
\b0 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC1tRTIMbgfcfViUZ46/ijIcu0M6SL5UENH5TzBPyntAkwyvjLxLAAUqaucpszPNXSaQnYRrnM4Ir0OXvIbOFleXVCdBo9MG4JOhfyyMfGTMdsnwKFkWrrkBQJGpfUOAYqrTNKggEzjOPpFqFxZnqLrmlaJoTqE+xw00T9eGgjLxJsf5k0aK0QWyHfhpI9MQK59kmGJtD4kscHH7unwNh6e8BP465Zf+tlchxSsNEsZs5P8NE+ntafgwb+VdOGpTe8wwAwb0UV5wpuNRcnoSS6mkoIXD2LVWj9mFSrLCy7wtyLm3RrE3I80cM7IM7SUXWytjTkcsgYIL4NSDQ+UcGnUQEoY8Tu4x88edarrOq6NiCIlLCI9vR14UDtZSvo5ursLiiiwZ2pEKKCRYYr0MD2EVaosxPRo1t9Mxs9VfSHIGCwg63+3PrYso5ys5wnKHo5t97gUb2km3R3tkxv/GfXF/EnaZOzLO3LQP1Dh/cm+YThKEpHK43i1/NrDgf95fYc= root@DELL-SIM\b\par
nano /etc/netplan/1-network-manager-all.yaml\fs44\par
\b0\fs28 network:\par
  ethernets:\par
    ens33:\par
      addresses:\par
      - 192.168.1.155/24\par
      gateway4: 192.168.1.1\par
      dhcp4: no\par
      dhcp6: no\par
      nameservers:\par
        addresses:\par
        - 192.168.1.1\par
        search:\par
        - test.my\par
  version: 2\par
-------------------------------------------------------------------------\par
\b mount /data/pr1/linuxmint-21.1.0-2023.09.11-xfce-64bit.iso /mnt\par
cp -rv /mnt/ /data/\par
chmod 0666 /data/mnt/boot/grub/grub.cfg\par
nano /data/mnt/boot/grub/grub.cfg\par
\b0 set timeout=5\par
\b grub-mkrescue -o /data/linuxmint-my.iso /data/mnt/\b0\par
\f1\lang1049 -------------------------------------------------------------------------\f0\lang9\par
\b #!/bin/bash\par
# ansible-playbook create-vm.yaml\par
# sleep 1200\par
touch test.test\par
scp -o StrictHostKeyChecking=no test.test test:/root\par
ssh test 'echo -ne "n\\n""p\\n""1\\n""\\n""\\n""t\\n""82\\n""w\\n" |fdisk /dev/sda'\par
ssh test 'mkswap /dev/sda1'\par
ssh test 'swapon /dev/sda1'\par
ssh test 'apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y'\par
ssh test 'curl -fsSL {{\field{\*\fldinst{HYPERLINK https://download.docker.com/linux/ubuntu/gpg }}{\fldrslt{https://download.docker.com/linux/ubuntu/gpg\ul0\cf0}}}}\f0\fs28  | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg'\par
ssh test 'add-apt-repository "deb [arch=amd64] {{\field{\*\fldinst{HYPERLINK https://download.docker.com/linux/ubuntu }}{\fldrslt{https://download.docker.com/linux/ubuntu\ul0\cf0}}}}\f0\fs28  $(. /etc/os-release; echo "$UBUNTU_CODENAME") stable"'\par
ssh test 'apt update'\par
ssh test 'apt -y install docker-ce'\par
ssh test 'docker run -d -p 80:80 --name test simff/ng:base'\par
-----------------------------------------------------------------------------------------------\par
ip addr del 192.168.1.179/24 scope global dev ens160\par
00:44:A9:0C:71:AB\par
--------------------------------------------------------------------------------------------\par
sudo apt install -y xdotool\par
nano click\par
\b0\lang1033 #!/bin/bash\par
\par
sleep 10\par
WID=xdotool getactivewindow\par
xdotool windowfocus $WID\par
for i in \{1..2100\}\par
do\par
 xdotool key space\par
 xdotool key Down\par
done\par
\b\lang9 . ./click\par
-----------------------------------------------------------------------------------\par
esxi: Pa&&w0rd\par
\fs44 Ansible\par
\fs28 apt install pip -y\par
pip install pyvmomi\par
pip install ansible\par
ansible-galaxy collection install community.vmware --force\par
{\b0{\field{\*\fldinst{HYPERLINK https://docs.ansible.com/ansible/latest/collections/community/vmware/vmware_guest_module.html }}{\fldrslt{https://docs.ansible.com/ansible/latest/collections/community/vmware/vmware_guest_module.html\ul0\cf0}}}}\b0\f0\fs28\par
\b nano create-vm.yaml\b0\par
-\par
  hosts: localhost\par
  tasks:\par
    - name: Create a virtual machine\par
      community.vmware.vmware_guest:\par
        hostname: esxi\par
        username: root\par
        password: "Pa&&w0rd"\par
        validate_certs: False\par
        folder: /\par
        name: test-dhcp\par
        state: poweredoff\par
        guest_id: ubuntu64Guest\par
        disk:\par
          - size_gb: 4\par
            type: thin\par
            datastore: datastore1\par
        hardware:\par
          memory_mb: 6144\par
          num_cpus: 2\par
          scsi: paravirtual\par
        networks:\par
        - name: VM Network\par
           mac: 00:44:A9:0C:71:AB\par
          device_type: vmxnet3\par
      delegate_to: localhost\par
      register: Linuxmint\par
\b ansible-playbook create-vm.yaml\par
--------------------------------------------------------------------------------------\par
\fs44 netboot.xyz\par
\fs28 mkdir /data\par
cd /data\fs44\par
\fs28 wget {{\field{\*\fldinst{HYPERLINK https://boot.netboot.xyz/ipxe/netboot.xyz.iso }}{\fldrslt{https://boot.netboot.xyz/ipxe/netboot.xyz.iso\ul0\cf0}}}}\f0\fs28\par
apt update\par
apt install dnsmasq apache2 syslinux-common pxelinux -y\par
rm /var/www/html/index.html \par
mkdir tftp\par
mount netboot.xyz.iso ./tftp\par
cp -drv ./tftp /srv \par
rm /etc/dnsmasq.conf\par
nano /etc/dnsmasq.conf\par
\b0 interface=ens33,lo\par
bind-interfaces\par
domain=test.my\par
dhcp-range=ens33,192.168.1.150,192.168.1.190,255.255.255.0,1h\par
dhcp-option=3,192.168.1.1 # gateway\par
dhcp-option=6,192.168.1.1 # dns server\par
dhcp-option=28,192.168.1.255 # broadcast\par
# dhcp-option=42,0.0.0.0 # NTP\par
# dhcp-host=mac-address,host-name,192.168.1.155,infinite\par
dhcp-boot=pxelinux.0,pxeserver,192.168.1.90 # pxe-server\par
enable-tftp\par
tftp-root=/srv/tftp\b\par
nano /lib/systemd/system/dnsmasq.service\par
\b0 Type=idle\par
\b cp /usr/lib/PXELINUX/pxelinux.0 /srv/tftp/\par
mkdir /srv/tftp/pxelinux.cfg\par
cd /srv/tftp\par
cat isolinux.cfg > ./pxelinux.cfg/default\par
systemctl restart dnsmasq.service\par
systemctl enable dnsmasq.service\par
systemctl status dnsmasq.service\par
---------------------------------------------------------------------------------------\par
\fs44 Ubuntu 20 - Desktop\par
\fs28 apt update\par
apt install dnsmasq apache2 syslinux-common pxelinux lftp -y\par
rm /var/www/html/index.html \par
mkdir /data\par
mkdir /data/u20-netboot\par
cd /data/u20-netboot\par
lftp -c "open {{\field{\*\fldinst{HYPERLINK http://archive.ubuntu.com/ubuntu/dists/focal-updates/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/ }}{\fldrslt{http://archive.ubuntu.com/ubuntu/dists/focal-updates/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/\ul0\cf0}}}}\f0\fs28 ; mirror amd64/"\par
rm /etc/dnsmasq.conf\par
nano /etc/dnsmasq.conf\par
\b0 interface=ens33,lo\par
bind-interfaces\par
domain=test.my\par
address=/dhcp/192.168.1.90\par
dhcp-range=ens33,192.168.1.150,192.168.1.190,255.255.255.0,1h\par
dhcp-option=3,192.168.1.1 # gateway\par
dhcp-option=6,192.168.1.1 # dns server\par
dhcp-option=28,192.168.1.255 # broadcast\par
# dhcp-option=42,0.0.0.0 # NTP\par
# dhcp-host=mac-address,host-name,192.168.1.155,infinite\par
dhcp-boot=pxelinux.0,pxeserver,192.168.1.90 # pxe-server\par
enable-tftp\par
tftp-root=/srv/tftp\par
\b nano /lib/systemd/system/dnsmasq.service\par
\b0 Type=idle\par
\b mkdir /srv/tftp\par
systemctl restart dnsmasq.service\par
systemctl enable dnsmasq.service\par
systemctl status dnsmasq.service\par
cp -rv /data/u20-netboot/amd64/\{initrd.gz,linux,pxelinux.0\} /srv/tftp/\par
cp /usr/lib/syslinux/modules/bios/ldlinux.c32 /srv/tftp/\par
mkdir /srv/tftp/pxelinux.cfg\par
nano /srv/tftp/pxelinux.cfg/default\par
\b0 DEFAULT install\par
LABEL install\par
  KERNEL linux\par
  APPEND initrd=initrd.gz auto=true priority=critical url={{\field{\*\fldinst{HYPERLINK http://192.168.1.90/preseed.cfg }}{\fldrslt{http://192.168.1.90/preseed.cfg\ul0\cf0}}}}\f0\fs28\par
\b nano /var/www/html/preseed.cfg\par
\b0 # Localization\par
d-i debian-installer/language string ru\par
d-i debian-installer/country string RU\par
# Keyboard\par
d-i keyboard-configuration/layoutcode string ru\par
# Create vagrant user account.\par
d-i passwd/user-fullname string sim\par
d-i passwd/username string sim\par
d-i passwd/user-password password Passw0rd\par
d-i passwd/user-password-again password Passw0rd\par
# Disk\par
d-i partman-auto/method string lvm\par
d-i partman-lvm/confirm_nooverwrite boolean true\par
d-i partman/choose_partition select finish\par
d-i partman/confirm_nooverwrite boolean true\par
# Reboot\par
d-i finish-install/reboot_in_progress note\par
# --------------------------------------------\par
d-i pkgsel/include string openssh-server\par
d-i preseed/late_command string \\\par
  in-target mkdir -p /root/.ssh; \\\par
  in-target /bin/sh -c "echo '' > /root/.ssh/authorized_keys"\b\par
cat /var/lib/misc/dnsmasq.leases\b0\par
\b ----------------------------------------------------------------------------\par
\par
\par
\par
\b0\par
\par
}
 